services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    networks:
      - default
    environment:
      SERVER_NAME: ${SERVER_NAME:-winker.com.ua}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET:-SeDM+L3BbxUkbNprZ2/oaSdZ61ANHjt0lOyv4VQSd+A=}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET:-SeDM+L3BbxUkbNprZ2/oaSdZ61ANHjt0lOyv4VQSd+A=}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-winker.com.ua|localhost}|php$$
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-root}@database:5432/${POSTGRES_DB:-winker}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${MERCURE_URL:-http://mercure/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL:-https://winker.com.ua/.well-known/mercure}
      MERCURE_JWT_SECRET: ${MERCURE_JWT_SECRET:-SeDM+L3BbxUkbNprZ2/oaSdZ61ANHjt0lOyv4VQSd+A=}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
#  mercure:
#    image: dunglas/mercure
#    environment:
#      # Секрети JWT для публікації та підписки
#      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET:-SeDM+L3BbxUkbNprZ2/oaSdZ61ANHjt0lOyv4VQSd+A=}
#      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET:-SeDM+L3BbxUkbNprZ2/oaSdZ61ANHjt0lOyv4VQSd+A=}
#      # CORS та дозволені джерела для публікації
#      MERCURE_CORS_ALLOWED_ORIGINS: 'https://winker.com.ua'
#      MERCURE_PUBLISH_ALLOWED_ORIGINS: ${MERCURE_PUBLISH_ALLOWED_ORIGINS:-https://winker.com.ua|http://localhost}
#      ALLOW_ANONYMOUS: 1 # Дозволяє анонімний доступ (за потреби)
#      SERVER_NAME: ':80' # щоб вимкнути автоматичне перенаправлення HTTP на HTTPS
#    ports:
#      - "3000:80" # Публічний порт для доступу до Mercure
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-winker}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - default
###< doctrine/doctrine-bundle ###

#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    ports:
#      - "5672:5672" # AMQP порт для додатків
#      - "15672:15672" # Management UI
#    environment:
#      RABBITMQ_DEFAULT_USER: admin
#      RABBITMQ_DEFAULT_PASS: winker_Nubi%a_2525
#      RABBITMQ_ERLANG_COOKIE: 'SeDM+L3BbxUkbNprZ2'
#      RABBITMQ_DEFAULT_VHOST: /
#      RABBITMQ_HEARTBEAT: 10
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit tcp_listen_options [{keepalive,true}]"
      
      
  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper
      restart: unless-stopped
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_SYNC_LIMIT: 2    # Додаємо параметр syncLimit
        ZOOKEEPER_INIT_LIMIT: 5    # Додаємо параметр initLimit
      networks:
        - default
  

#  kafka:
#      image: confluentinc/cp-kafka:latest
#      container_name: kafka
#      restart: unless-stopped
#      ports:
#        - "9093:9093"
#        - "9092:9092"
#      environment:
#        KAFKA_BROKER_ID: 1
#        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://64.226.69.60:9092
#        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093, PLAINTEXT_HOST://0.0.0.0:9092
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_HOST
#        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#        KAFKA_CREATE_TOPICS: "user_notifications:1:1"  # Додаємо авто-створення топіка
#        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Дозволяє створювати нові топіки на льоту
#        KAFKA_LOG_RETENTION_HOURS: 168  # 7 днів збереження повідомлень
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ZOOKEEPER_SASL_ENABLED: FALSE
      # Внутрішнє з'єднання - без автентифікації
      # Зовнішнє з'єднання - з SASL автентифікацією
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://64.226.69.60:29092
      
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      
      # SASL налаштування тільки для зовнішнього слухача
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAINTEXT
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      
      
#      KAFKA_ZOOKEEPER_SET_ACL: FALSE
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf -Dzookeeper.sasl.client=false"
#      KAFKA_ZOOKEEPER_SASL_ENABLED: "true"
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf -Dzookeeper.sasl.client=true"
      
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
#      KAFKA_HEAP_OPTS: "-Xmx1G -Xms512M"
    volumes:
      - ./kafka_jaas.conf:/etc/kafka/kafka_jaas.conf
    depends_on:
      - zookeeper
    networks:
      - default
  
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms128M -Xmx512M -Xss256K"
#      SPRING_SECURITY_USER_NAME: "admin"
#      SPRING_SECURITY_USER_PASSWORD: "12081980"
#      CMD_ARGS: "--protobufdesc.directory=/var/protobuf_desc --server.servlet.context-path=/ --kafka.brokerConnect=kafka:9092 --server.port=9000 --security.basic.enabled=true --security.user.name=admin --security.user.password=12081980"
#      JVM_OPTS: "-Xms16M -Xmx512M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    ports:
      - 9900:9000
    depends_on:
      - kafka
    networks:
      - default
  
volumes:
  caddy_data:
  caddy_config:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
networks:
  default:
    name: winker_default
